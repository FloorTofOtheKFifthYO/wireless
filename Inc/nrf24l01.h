#ifndef NRF24L01
#define NRF24L01
#include "stm32f0xx_hal.h"
#include "function_ptr.h"
#include "spi.h"
#include "delay.h"
#include "can.h"

typedef enum{
  CSN,
  CE
}NRF_GPIO;

typedef enum{
  LOW=0,
  HIGH=1
}NRF_GPIO_Level;


typedef void (*nrf_com_fptr)(uint8_t * txData,uint8_t * rxData,uint16_t len);
typedef void (*nrf_read_or_write_fptr)(uint8_t * Data,uint16_t len);
typedef void (*nrf_delay_ms_fptr)(uint32_t t);
typedef void (*nrf_set_gpio_fptr)(NRF_GPIO io,NRF_GPIO_Level level);
typedef void (*nrf_rx_analize_fptr)(uint8_t * data,uint16_t len);
 
typedef enum{
  NRF_TX=2,
  NRF_RX=3,
  NRF_WAIT=0
}NRF_Mode;

typedef struct {
  nrf_com_fptr spi_write_read;
  nrf_read_or_write_fptr spi_write;
  nrf_read_or_write_fptr spi_read;
  delay_ms_fptr delay_ms;
  delay_us_fptr  delay_us;
  nrf_set_gpio_fptr set_gpio;
  nrf_rx_analize_fptr rx_analize;
  uint8_t * tx_data;
  uint16_t tx_len;
  uint8_t * rx_data;
  uint16_t rx_len;
  NRF_Mode mode;
}NRF_Dev;


#define R_REGISTER 0
#define W_REGISTER 0x20
#define R_RX_PAYLOAD 0x61
#define W_RX_PAYLOAD 0xa0
#define FLUSH_TX 0xe1
#define FLUSH_RX 0xe2
#define REUSE_TX_PL 0xe3
#define NOP 0xff

#define TX_ADR_WIDTH    5    // ??бу??А????o|
#define RX_ADR_WIDTH    5    // 
#define TX_PLOAD_WIDTH  32//10  //  ??боижА???бу???иж???o|
#define RX_PLOAD_WIDTH  32//10   // ??гд??бк??бу???иж???o|

#define NRF_CONFIG      0x00  // ижбн?????б▒???бо????А????CRC? ?ижa??бз????
#define EN_AA           0x01  // ии?a??бз?oб▒?-б▒???ии??ии?????
#define EN_RXADDR       0x02  // ??бе?б▒бз???иж?б░ии?????
#define SETUP_AW        0x03  // ?б▒???бо??бу??А????o|ии?????
#define SETUP_RETR      0x04  // ии?a??бзиж????бо???ии??ии?????
#define RF_CH           0x05  // ?бдгд???ижбщбо???ии?????
#define RF_SETUP        0x06  // ??бо?бу?ижА?????А????ииАбк???ии??ии?????
#define STATUS          0x07  // ????А??бе??-???бз

#define MAX_TX          0x10  //ии????бу????бшбь??боижА??????бу??-?иC?
#define TX_OK           0x20  //TX??боиж??????????-?иC?
#define RX_OK           0x40  //??гд?б▒???бу??бу?????-?иC?

#define OBSERVE_TX      0x08  // ??боиж????бо?ж╠????ии??
#define CD              0x09  // ??бу??А?бъ??ж╠?
#define RX_ADDR_P0      0x0A  // ижбщбоиж?б░0??гд?б▒???бу?????бу??А
#define RX_ADDR_P1      0x0B  // ижбщбоиж?б░1??гд?б▒???бу?????бу??А
#define RX_ADDR_P2      0x0C  // ижбщбоиж?б░2??гд?б▒???бу?????бу??А
#define RX_ADDR_P3      0x0D  // ижбщбоиж?б░3??гд?б▒???бу?????бу??А
#define RX_ADDR_P4      0x0E  // ижбщбоиж?б░4??гд?б▒???бу?????бу??А
#define RX_ADDR_P5      0x0F  // ижбщбоиж?б░5??гд?б▒???бу?????бу??А
#define TX_ADDR         0x10  // ??боижА???бу??А
#define RX_PW_P0        0x11  // ??гд?б▒?ижбщбоиж?б░0??гд?б▒???бу???иж???o|
#define RX_PW_P1        0x12  // ??гд?б▒?ижбщбоиж?б░0??гд?б▒???бу???иж???o|
#define RX_PW_P2        0x13  // ??гд?б▒?ижбщбоиж?б░0??гд?б▒???бу???иж???o|
#define RX_PW_P3        0x14  // ??гд?б▒?ижбщбоиж?б░0??гд?б▒???бу???иж???o|
#define RX_PW_P4        0x15  // ??гд?б▒?ижбщбоиж?б░0??гд?б▒???бу???иж???o|
#define RX_PW_P5        0x16  // ??гд?б▒?ижбщбоиж?б░0??гд?б▒???бу???иж???o|
#define FIFO_STATUS     0x17  // FIFO? ??бнгд? ???o????А??бе??-???бзии?????
extern NRF_Dev NRF24l01;
void tx_(uint8_t *data);
void rx_(uint8_t *data);
void NRF_Init(NRF_Dev * dev);
void nrf_receive(NRF_Dev * dev);
void nrf_send_message(NRF_Dev * dev);
void nrf_receive2(NRF_Dev *dev);
void add_crc_check(unsigned char *sendstr, int datalen);
int crc_check(unsigned char *rcvstr, int datalen);
void nrf_send(uint8_t *sendstr, int datalen);
#endif
